{"version":3,"sources":["components/generate-matrix/generate-matrix.js","components/cipher/cipher.js","App.js","serviceWorker.js","index.js"],"names":["push","arr","x","concat","pushInRowWithSpecialCase","c","pushInRow","hasInArray","i","length","j","includes","preprocessKey","key","Set","split","reduce","prev","curr","removeDuplicates","replace","removeNonAlphabetics","toUpperCase","fn","charCodeAt","String","fromCharCode","fromAToZ","getIndexes","matrix","console","log","getAllIndexes","cc","c1","c2","i1","j1","i2","j2","move","resolveCase","isCase1","resolveCase1","isCase2","resolveCase2","resolveCase3","cipher","text","ans","preprocessText","useStyles","makeStyles","theme","paper","marginTop","spacing","label","display","opacity","cripted","fontFamily","selectedCell","backgroundColor","App","classes","useState","setKey","setText","cnt","generateMatrix","Container","maxWidth","CssBaseline","Paper","className","TextField","onChange","e","target","value","margin","fullWidth","variant","TableContainer","Table","TableBody","map","row","TableRow","TableCell","Typography","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.06fdcbb8.chunk.js","sourcesContent":["function push(arr, x) {\r\n  return arr.concat([x]);\r\n}\r\n\r\nfunction pushInRowWithSpecialCase(arr, c, i = 0) {\r\n  if (!(c === \"I\" || c === \"J\")) return pushInRow(arr, c);\r\n\r\n  if (!hasInArray(arr, c)) return pushInRow(arr, \"I/J\");\r\n  return arr;\r\n}\r\n\r\nfunction removeDuplicates(key) {\r\n  const removedDuplicates = [...new Set(key.split(\"\"))];\r\n  return removedDuplicates.reduce((prev, curr) => {\r\n    return pushInRowWithSpecialCase(prev, curr);\r\n  }, []);\r\n}\r\n\r\nfunction removeNonAlphabetics(key) {\r\n  return key.replace(/[^a-zA-Z]/g, \"\");\r\n}\r\n\r\nfunction fromAToZ(fn) {\r\n  for (let i = \"A\".charCodeAt(0); i <= \"Z\".charCodeAt(0); i++)\r\n    fn(String.fromCharCode(i));\r\n}\r\n\r\nfunction hasInArray(arr, c) {\r\n  for (let i = 0; i < arr.length; i++)\r\n    for (let j = 0; j < arr[i].length; j++) {\r\n      if (arr[i][j].includes(c)) return true;\r\n    }\r\n  return false;\r\n}\r\n\r\nexport const pushInRow = (arr, c, i = 0) => {\r\n  // magic!!\r\n  if (arr.length < i + 1) arr = push(arr, []);\r\n  if (arr[i].length === 5) return [arr[i], ...pushInRow(arr, c, i + 1)];\r\n  return [push(arr[i], c)];\r\n};\r\n\r\nexport const preprocessKey = key => {\r\n  return removeDuplicates(removeNonAlphabetics(key.toUpperCase()));\r\n};\r\n\r\nexport const countFromPreprocessedKey = preKey => {\r\n  return preKey.reduce((prev, curr) => prev + curr.length, 0);\r\n};\r\n\r\nexport default key => {\r\n  // Generate Matrix\r\n  let arr = preprocessKey(key);\r\n  fromAToZ(c => {\r\n    if (!hasInArray(arr, c)) {\r\n      arr = pushInRowWithSpecialCase(arr, c);\r\n    }\r\n  });\r\n  return arr;\r\n};\r\n","function getIndexes(c, matrix) {\r\n  for (let i = 0; i < matrix.length; i++)\r\n    for (let j = 0; j < matrix[i].length; j++)\r\n      if (matrix[i][j].includes(c)) // includes can detect 'I/J' case!\r\n        return [i, j];\r\n  console.log(\"aa\");\r\n  console.log(c);\r\n  console.log(matrix);\r\n  return null; // this should not happen\r\n}\r\n\r\nfunction getAllIndexes(cc, matrix) {\r\n  const [c1, c2] = cc;\r\n  const [i1, j1] = getIndexes(c1, matrix);\r\n  const [i2, j2] = getIndexes(c2, matrix);\r\n  return { i1, j1, i2, j2 };\r\n}\r\n\r\nfunction move(x) {\r\n  return (x + 1) % 5;\r\n}\r\n\r\nexport function isCase1(cc, matrix) {\r\n  const { i1, i2 } = getAllIndexes(cc, matrix);\r\n  return i1 === i2;\r\n}\r\n\r\nexport function isCase2(cc, matrix) {\r\n  const { j1, j2 } = getAllIndexes(cc, matrix);\r\n  return j1 === j2;\r\n}\r\n\r\n// Move inside rows, change columns\r\nexport function resolveCase1(cc, matrix) {\r\n  const { i1, j1, i2, j2 } = getAllIndexes(cc, matrix);\r\n  return matrix[i1][move(j1)] + matrix[i2][move(j2)];\r\n}\r\n\r\n// Move inside columns, change rows\r\nexport function resolveCase2(cc, matrix) {\r\n  const { i1, j1, i2, j2 } = getAllIndexes(cc, matrix);\r\n  return matrix[move(i1)][j1] + matrix[move(i2)][j2];\r\n}\r\n\r\n// Move inside rows, interchange columns\r\nexport function resolveCase3(cc, matrix) {\r\n  const { i1, j1, i2, j2 } = getAllIndexes(cc, matrix);\r\n  return matrix[i1][j2] + matrix[i2][j1];\r\n}\r\n\r\nconst preprocessText = text => {\r\n  text = text.toUpperCase().replace(/ /g, ''); // remove whitespaces\r\n  text = text.length % 2 === 1 ? text + 'X' : text; // add X when is odd\r\n  let ans = [];\r\n  for(let i=0; i<text.length; i+=2)\r\n    ans = ans.concat(text[i]+text[i+1]);\r\n  return ans;\r\n\r\n};\r\n\r\nfunction resolveCase(cc, matrix) {\r\n  if (isCase1(cc, matrix))\r\n    return resolveCase1(cc, matrix);\r\n  else if (isCase2(cc, matrix))\r\n    return resolveCase2(cc, matrix);\r\n  return resolveCase3(cc, matrix);\r\n}\r\n\r\nconst cipher = (text, matrix) => {\r\n  return preprocessText(text).reduce((prev, curr) => {\r\n    return prev + resolveCase(curr, matrix);\r\n  }, '')\r\n}\r\n\r\nexport default cipher;","import React, { useState } from 'react';\n\nimport Container from '@material-ui/core/Container';\nimport TextField from \"@material-ui/core/TextField\";\nimport Paper from \"@material-ui/core/Paper\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Typography from \"@material-ui/core/Typography\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport { TableContainer, Table, TableBody, TableCell, TableRow } from \"@material-ui/core\";\n\nimport generateMatrix, { preprocessKey } from \"./components/generate-matrix/generate-matrix\";\nimport cipher from \"./components/cipher/cipher\";\n\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(10),\n  },\n  label: {\n    display: 'inline-block',\n    opacity: \"0.6\",\n  },\n  cripted: {\n    display: 'inline-block',\n    fontFamily: 'consolas'\n  },\n  selectedCell: {\n    backgroundColor: 'hsl(160, 0%, 90%)'\n  }\n}));\n\nconst countFromPreprocessedKey = (preKey) => {\n  return preKey.reduce((prev, curr) => prev + curr.length, 0)\n}\n\nfunction App() {\n  const classes = useStyles();\n\n  const [key, setKey] = useState('bachatar');\n  const [text, setText] = useState('quien te quita lo bailado');\n\n  const cnt = countFromPreprocessedKey(preprocessKey(key));\n\n  const matrix = generateMatrix(key);\n  const cripted = cipher(text, matrix);\n\n  return (\n    <Container maxWidth=\"sm\">\n      <CssBaseline />\n      <Paper className={classes.paper}>\n        <TextField label=\"Key\"\n                   onChange={(e) => setKey(e.target.value)}\n                   margin='normal'\n                   fullWidth\n                   variant='outlined'\n                   value={key}\n        />\n        <TextField label=\"Text\"\n                   onChange={(e) => setText(e.target.value)}\n                   margin='normal'\n                   fullWidth\n                   variant='outlined'\n                   value={text}\n        />\n        <TableContainer>\n          <Table>\n            <TableBody>\n              {\n                matrix.map((row, i) =>\n                  <TableRow key={row}>\n                    {row.map((x, j) =>\n                      <TableCell key={x} className={(i*5+j) < cnt? classes.selectedCell: null}>{x}</TableCell>\n                    )}\n                  </TableRow>\n                )\n              }\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <Typography className={classes.label}>Cripted Text: </Typography>\n        <Typography className={classes.cripted} variant='h6'>{cripted}</Typography>\n      </Paper>\n    </Container>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}